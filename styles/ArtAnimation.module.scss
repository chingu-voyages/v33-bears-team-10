.fadecycle > * {
  opacity: 0;
  position: absolute;
  width: 200px;
  line-height: 200px;
  text-align: center;
  display: block;

  width: 60%;

  margin-left: auto;

  margin-right: auto;
}

.fadecycle > *:nth-child(1) {
  background: lightsalmon;
}
.fadecycle > *:nth-child(2) {
  background: lightsteelblue;
}
.fadecycle > *:nth-child(3) {
  background: lightseagreen;
}
.fadecycle > *:nth-child(4) {
  background: lightskyblue;
}

// Animation settings
$totalTime: 6s;
$items: 2;
$animationSpeed: 2.5;

// Calculate animation time in seconds (how long the fade lasts)
$animationTime: 0s + $totalTime / ($items * $animationSpeed * 2);
// Calculate show time in seconds (how long the element is displayed)
$showTime: (0s + $totalTime - ($animationTime * $items)) / $items;

// Set animation for each element
@for $i from 1 through $items {
  .fadecycle > *:nth-child(#{$i}) {
    // Delay is increased for each item
    // Starting with an offset of -$animationTime so the first element is displayed on load
    $delay: -$animationTime + ($animationTime + $showTime) * ($i - 1);
    animation: fadeinout $totalTime linear $delay infinite;
  }
}

// Calculate percentages of the display time for keyframes
$animationPercentage: 0% + 100 * (($animationTime / $totalTime));
$showPercentage: 0% + 100 * ($showTime / $totalTime);

@keyframes fadeinout {
  0% {
    opacity: 0;
  }
  #{$animationPercentage},
  #{$animationPercentage + $showPercentage} {
    opacity: 1;
  }
  #{$showPercentage + $animationPercentage * 2},
  100% {
    opacity: 0;
  }
}
